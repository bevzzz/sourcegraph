/* stylelint-disable selector-class-pattern */

/*
 * Copyright (c) Jupyter Development Team.
 * Distributed under the terms of the Modified BSD License.
 *
 * Source: https://unpkg.com/@jupyterlab/nbconvert-css@4.0.2/style/index.css
 *
 * Modified: styling specifications for classes that are not used
 * in the final document were removed, and some classes were renamed.
 * Some sections were re-arranged, no new sections have been added.
 */

:global {
    /* Cell */

    .jp-Cell {
        padding: 0.25rem;
        margin: 0;
        border: none;
        outline: none;
        background: transparent;

        pre.chroma {
            padding: 0 0.25rem;
            margin-bottom: 0;

            code {
                min-width: 100%;
            }
        }
    }

    // Put a space between input and output when there IS output
    .jp-Cell:not(.jp-mod-noOutputs) .jp-Cell-outputWrapper {
        margin-top: 0.25rem;
    }

    /* Collapser */

    .jp-Collapser {
        flex: 0 0 0.5rem;
        padding: 0;
        margin: 0;
        border: none;
        outline: none;
        background: transparent;
        border-radius: 2px;
        opacity: 1;
    }

    .jp-Collapser-child {
        display: block;
        width: 100%;
        box-sizing: border-box;

        // height: 100% doesn't work because the height of its parent is computed from content
        position: absolute;
        top: 0;
        bottom: 0;
    }

    // Make the output collapser disappear when there is not output, but do so
    // in a manner that leaves it in the layout and preserves its width.
    .jp-Cell.jp-mod-noOutputs .jp-Cell-outputCollapser {
        border: none !important;
        background: transparent !important;
    }

    .jp-Cell:not(.jp-mod-noOutputs) .jp-Cell-outputCollapser {
        min-height: 20px;
    }

    /* Common input/output */

    .jp-Cell-inputWrapper,
    .jp-Cell-outputWrapper {
        display: flex;
        flex-direction: row;
        padding: 0;
        margin: 0;

        // Added to reveal the box-shadow on the input and output collapsers.
        overflow: visible;
    }

    // Only input/output areas inside cells
    .jp-Cell-inputArea,
    .jp-Cell-outputArea {
        flex: 1 1 auto;
    }

    /* Input */

    // All input areas
    .jp-InputArea {
        display: table;
        table-layout: fixed;
        width: 100%;
        overflow: hidden;
    }

    .jp-InputArea-editor {
        display: table-cell;
        overflow: hidden;
        vertical-align: top;
    }

    .jp-InputPrompt {
        display: table-cell;
        vertical-align: top;
        color: var(--text-muted);
        font-family: var(--code-font-family);
        padding: 0.25rem;

        // Right align prompt text, don't wrap to handle large prompt numbers
        text-align: right;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;

        // Disable text selection
        user-select: none;
    }

    /* Markdown Cell */

    .jp-MarkdownOutput {
        display: table-cell;
        width: 100%;
        margin-top: 0;
        margin-bottom: 0;
        padding-left: var(--jp-code-padding);
    }

    .jp-MarkdownOutput.jp-RenderedHTMLCommon {
        overflow: auto;
    }

    .jp-RenderedMarkdown.jp-RenderedHTMLCommon td,
    .jp-RenderedMarkdown.jp-RenderedHTMLCommon th {
        max-width: none;
    }

    /* Code Cell */

    .jp-CodeMirrorEditor {
        cursor: text;
    }

    .cm-editor.cm-s-jupyter {
        font-family: var(--code-font-family);
        border: 0;
        border-radius: 0;
        height: auto;

        pre {
            padding: 0;

            code {
                min-width: 100%;
            }
        }

        .highlight pre {
            padding: 0.25rem 0.25rem;
            margin: 0;

            font-family: inherit;
            font-size: inherit;
            line-height: inherit;
            color: inherit;
        }
    }

    /* Main OutputArea */

    .jp-OutputArea {
        overflow-y: auto;
    }

    .jp-OutputArea-child {
        display: table;
        table-layout: fixed;
        width: 100%;
        overflow: hidden;
    }

    .jp-OutputPrompt {
        color: var(--text-muted);
        font-family: var(--code-font-family);

        // Right align prompt text, don't wrap to handle large prompt numbers
        text-align: right;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;

        // Disable text selection
        user-select: none;
    }

    .jp-OutputArea-prompt {
        display: table-cell;
        vertical-align: top;
    }

    .jp-OutputArea-output {
        display: table-cell;
        height: auto;
        overflow: auto;
        user-select: text;
    }

    .jp-OutputArea-output pre {
        border: none;
        margin: 0;
        overflow-x: auto;
        overflow-y: auto;
        word-break: break-all;
        word-wrap: break-word;
        white-space: pre-wrap;
    }

    .jp-OutputArea-output.jp-RenderedHTMLCommon table {
        margin-left: 0;
        margin-right: 0;
    }

    // Hide the gutter in case of
    //  - nested output areas (e.g. in the case of output widgets)
    //  - mirrored output areas
    .jp-OutputArea .jp-OutputArea .jp-OutputArea-prompt {
        display: none;
    }

    // executeResult is added to any Output-result for the display of the object returned by a cell.
    .jp-OutputArea-output.jp-OutputArea-executeResult {
        margin-left: 0;
        width: 100%;
    }

    // Text output with the Out[] prompt needs a top padding to match the alignment of the Out[] prompt itself.
    .jp-OutputArea-executeResult .jp-RenderedText.jp-OutputArea-output {
        &:has(> pre.chroma) {
            padding-left: 0;
        }
    }

    /* RenderedText */

    .jp-RenderedText {
        text-align: left;
        padding-left: 0.25rem;
        font-family: var(--code-font-family);
    }

    /* Mobile */

    @media only screen and (max-width: 760px) {
        .jp-InputArea-editor {
            display: table-row;
            margin-left: var(--jp-notebook-padding);
        }

        .jp-InputPrompt {
            display: table-row;
            text-align: left;
        }

        .jp-OutputPrompt {
            display: table-row;
            text-align: left;
        }

        .jp-OutputArea-child .jp-OutputArea-output {
            display: table-row;
            margin-left: var(--jp-notebook-padding);
        }
    }
}
